<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="GameMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAgAAAAQAAAAHAAAACwAAABEAAAAYAAAAIQAAACQAAAAUAAAABgAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAFAAAACQAA
        AA0AAAAUAAAAGwAAACUAAAAwAAAAOgAAAEYAAABRAAAAXAAAAGUAAABsAAAAbgAAAFwAAAA8AAAAHQAA
        AAkAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAGgAA
        ADQAAABIAAAAVQAAAF8AAABoAAAAbwAAAHUAAAB4AAAAewAAAH0AAAB+AAAAfwAAAH8BAQGCHh4epjMz
        M7k1NTWyExMTWgAAACYAAAAOAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAAAATAAAALhgYGHQsLCy4MjIyzxsbG7MMDAykDAwMqQsLC6wKCgqvCAgIrgYGBqoDAwOjAQEBmR4e
        HtM0NDT/Tk5O/1tbW/8tLS3vBgYGdgAAAFIAAAAxAAAAFQAAAAYAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAMzMzCkNDQ3E9PT28Ly8v+iYmJv8fHx//Ghoa/xkZGf8ZGRn/ISEh/2mIl/8cHBz/FhYW/w4O
        Dv8JCQn/CQkJ/zExMf+Eg4P/bWxs/2VlZf8WFhbCAAAAfAAAAHMAAABcAAAAPAAAAB0AAAAJAAAAAgAA
        AAAAAAAAAAAAAAAAAABBQUGUUGh0/w8PD/8KCgr/BgYG/wICAv8CAgL/BgYG/wwMDP8bGhr/UWNt/yQj
        JP83Njf/ODY4/x0cHv8QEBH/MzMz/5CPj/+8u7v/fXx8/yYlJfEDAwTRAwMDpQAAAIEAAAB3AAAAZQAA
        AEcAAAAmAAAADgAAAAMAAAAAAAAAADg4OL9DRUj/Ly4v/zk4Of88Ozz/Ojk6/zs6O/89PD3/Pj0+/z49
        P/9BP0H/QT9B/0A/Qf9BQEH/IB8h/xQTFv82Njb/kpGQ/9fW1f+JiIj/Ojk5/xEREf8ODg7/CgkL9gkJ
        C80GBgagAAAAewAAAGwICAhZKCgoUQAAABIAAAADTkxOz0pIS/84Nzr/JCMn/x4dIP8gHyL/JCMm/ygn
        Kv8sKy7/MS8y/zUzNv84Nzn/PDo8/z49P/8mJSj/GBcZ/y0tLv+Af37/q6qp/46Njf84ODj/Dw4P/zg2
        N/89Ozv/JCMk/xMTFP8SERTyEhIVzTo6OvpcXFz/JiYmcgAAAAhFQ0aqUlBS/2RjZP9aWVr/T05P/0lI
        Sf9KSUr/RkVG/0NDQ/9MS0z/UE5Q/09NT/9OTE7/TUtN/yMiJf8YFxr/ICAi/1JRUf+Uk5P/iIiH/xMT
        E/8PDxD/Dw4Q/xkYGv8rKiz/MjEy/yclJ/8bGh3/TU1N/4+Ojv9JSUnJAAAAAlBOUHtXVlf/WVlZ/0VF
        Rf9PT0//U1NT/1RUVP9aWlr/Xl5e/1RTVP8/Pz//aGdo/3Nyc/9dXF3/NjU3/xkYG/8YFxr/LCss/0ND
        Q/8wMDD/CQgJ/xISFP8SERP/ExMV/xUUFv8WFRj/FxYZ/xoZHf9TUlP/wL++/05OTv4iIiZDRT9FLJiY
        mP5fXl//W1tb/2hoaP9tbW3/aWlp/11dXf9TU1P/VlVW/1hWWP+Liov/rayt/9LS0v+3xc7/X67Z/0BF
        TP8ZGBv/ISEi/xISE/8UFBb/FRUX/xUUFv8WFRj/Fxca/xkYG/8aGRz/HRwf/zs6PP+ko6L/V1ZW/yQk
        Jn4AAAAAgH6Aq3p5ev92dXb/cW9w/29tbv9wb3D/c3Jy/3VzdP9zcnP/b25v/2RjZP9fXV//XVxd/19e
        X/9bYGX/TFBX/ywqLf8dHB//GRgb/xkYG/8ZGBv/GBca/xkYHP8aGR3/HBse/xwbHv8fHiL/JiYo/1pZ
        Wf8tLS3/JSUplAAAAABVVVUGY2FjcXx7e9mIh4f/iYeI/4OBgv98env/dHN0/25sbf9oZ2j/ZGNk/2Nh
        Y/9iYGL/YV9h/19dX/9TUVP/SkhK/0NAQv89Ozz/NTQ1/y8tL/8oJyn/JCIl/x0cH/8dHB//Hx4h/yEg
        JP8jIib/JCQl/yYlJ/8pKCuSAAAAAAAAAAAAAAAAAAAAAFVVVSplYmJvaWdnqmlmaN9samv+cW9w/25s
        bv9ramv/aGZo/2NiY/9eXF7/VlVW/05NTv9HRkf/Pj0+/y0sLf8lJCX/MzEy/yYlJf8vLi//MzIz/zIw
        Mv8wLjD/LCst/ywqLP8yMDL/MzEz/zMxM4EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACcm
        J5ohHx7/KCYk/yMiIP8kIyH/KCYk/y8sKv86NjP/R0I+/1hRS/9rYlv/gndt/5CDeP8+Ozr/Pjw7/yQj
        Jf8hIB//IR8f/0tGRP80MTH/LCos/zIwMv8+PD78bGxsQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAW1FRHDw5OWppZmHlZ2Nf/1pXU/9XVE//XFhT/2RfWf9uZ2D/eXBo/4R6cf+RhXr/npCE/2BZ
        VP9TT0v/VFFO/1dTTv8pJyT/fHNr/2BYUf9iWlT/MC8wkicnJw0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADQ0NCJua2fWc3Bs/2RhXf9cWVX/XllV/2ZgWv9waWL/e3Jq/4d8
        c/+ViH3/f3Vt/09LSP9cWFP/R0NA/1JMSf+HfHb/W1JP/zAuMKQAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMTEw1hX16NX11b8mBeXP9fXFr/YV5b/2hk
        Yf9va2f/eHNv/355dv9zcG7/TEpK/0hFQ/81MjL/SUVE/0I+Pd8wLjBjAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4ODgJUFBQSV1b
        XXtiYGKcZmVmsGRjZLlkYmS6Y2Jjs2BfYKZcWlySU1FTd0RERFYwMDYqAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////////////7///4AH/+AAAf/AAAB/wAAAD8AAAAPAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAgAAAAIAAAADwAAAA/wAAAP8AAAH/wAAD/+AAD//4AB//////////////
        //////////////////////////////////8=
</value>
  </data>
</root>